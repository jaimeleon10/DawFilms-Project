-- DELETES ALL
deleteAllVentas:
DELETE FROM VentaEntity;

deleteAllLineas:
DELETE FROM LineaVentaEntity;

deleteAllProductos:
DELETE FROM ProductoEntity;

deleteAllClientes:
DELETE FROM UsuarioEntity;


-- Tabla de Clientes
CREATE TABLE IF NOT EXISTS UsuarioEntity (
      id INTEGER PRIMARY KEY,
      nombre TEXT NOT NULL,
      apellido TEXT NOT NULL,
      fecha_nacimiento TEXT NOT NULL,
      dni TEXT NOT NULL,
      email TEXT NOT NULL,
      numSocio TEXT NOT NULL UNIQUE,
      password TEXT NOT NULL,
      created_at TEXT NOT NULL,
      updated_at TEXT NOT NULL,
      is_deleted INTEGER NOT NULL DEFAULT 0
);

-- Operaciones CRUD para la tabla de Clientes
selectAllClientes:
SELECT * FROM UsuarioEntity;

selectClienteById:
SELECT * FROM UsuarioEntity WHERE id = ?;

selectClienteByNumSocio:
SELECT * FROM UsuarioEntity WHERE numSocio = ?;

selectAllClientesByIsDeleted:
SELECT * FROM UsuarioEntity WHERE is_deleted = ?;

selectClienteLastInserted:
SELECT * FROM UsuarioEntity WHERE id = last_insert_rowid();

insertCliente:
INSERT INTO UsuarioEntity (nombre, apellido, fecha_nacimiento, dni, email, numSocio, password, created_at, updated_at, is_deleted)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

updateCliente:
UPDATE UsuarioEntity SET nombre = ?, apellido = ?, fecha_nacimiento = ?, dni = ?, email = ?, numSocio = ?, password = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteCliente:
DELETE FROM UsuarioEntity WHERE id = ?;

removeAllClientes:
DELETE FROM UsuarioEntity;

selectClienteByEmailAndPassword:
SELECT * FROM UsuarioEntity WHERE email = ? AND password = ?;

selectClienteByEmail:
SELECT * FROM UsuarioEntity WHERE email = ?;

-- Tabla de Productos:
CREATE TABLE IF NOT EXISTS ProductoEntity (
    id TEXT PRIMARY KEY,
    tipo_producto TEXT NOT NULL,
    imagen TEXT NOT NULL,
    precio REAL NOT NULL,
    fila_butaca INTEGER,
    columna_butaca INTEGER,
    tipo_butaca TEXT,
    estado_butaca TEXT,
    ocupacion_butaca TEXT,
    nombre_complemento TEXT,
    stock_complemento INTEGER,
    categoria_complemento TEXT,
    created_at TEXT NOT NULL,
    updated_at TEXT NOT NULL,
    is_deleted INTEGER NOT NULL DEFAULT 0
);

-- Operaciones CRUD para la tabla de Productos
selectAllProductos:
SELECT * FROM ProductoEntity;

selectAllButacas:
SELECT * FROM ProductoEntity WHERE tipo_producto = 'Butaca';

selectAllComplementos:
SELECT * FROM ProductoEntity WHERE tipo_producto = 'Complemento';

selectButacaById:
SELECT * FROM ProductoEntity WHERE id = ? AND tipo_producto = 'Butaca';

selectComplementoById:
SELECT * FROM ProductoEntity WHERE id = ?  AND tipo_producto = 'Complemento';

selectComplementoByNombre:
SELECT * FROM ProductoEntity WHERE tipo_producto = 'Complemento' AND nombre_complemento = ?;

selectButacaLastInserted:
SELECT * FROM ProductoEntity WHERE id = last_insert_rowid() AND tipo_producto = 'Butaca';

selectComplementoLastInserted:
SELECT * FROM ProductoEntity WHERE id = last_insert_rowid() AND tipo_producto = 'Complemento';

insertButaca:
INSERT INTO ProductoEntity (id, tipo_producto, imagen, precio, fila_butaca, columna_butaca, tipo_butaca, estado_butaca, ocupacion_butaca, created_at, updated_at, is_deleted)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

insertComplemento:
INSERT INTO ProductoEntity (id, tipo_producto, imagen, precio, nombre_complemento, stock_complemento, categoria_complemento, created_at, updated_at, is_deleted)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

updateButaca:
UPDATE ProductoEntity SET tipo_producto = ?, imagen = ?, precio = ?, fila_butaca = ?, columna_butaca = ?, tipo_butaca = ?, estado_butaca = ?, ocupacion_butaca = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

updateComplemento:
UPDATE ProductoEntity SET tipo_producto = ?, imagen = ?, precio = ?, nombre_complemento = ?, stock_complemento = ?, categoria_complemento = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteLogicoButaca:
UPDATE ProductoEntity SET updated_at = ?, is_deleted = 1 WHERE id = ? AND tipo_producto = 'Butaca';

deleteLogicoComplemento:
UPDATE ProductoEntity SET updated_at = ?, is_deleted = 1 WHERE id = ? AND tipo_producto = 'Complemento';

-- Tabla de Ventas
CREATE TABLE IF NOT EXISTS VentaEntity (
    id TEXT PRIMARY KEY,
    cliente_id INTEGER NOT NULL REFERENCES UsuarioEntity(id),
    total REAL NOT NULL,
    fecha_compra TEXT NOT NULL,
    created_at TEXT NOT NULL,
    updated_at TEXT NOT NULL,
    is_deleted INTEGER NOT NULL DEFAULT 0
);

-- Operaciones CRUD para la tabla de Ventas
removeAllVentas:
DELETE FROM VentaEntity;

selectAllVentas:
SELECT * FROM VentaEntity;

selectVentaById:
SELECT * FROM VentaEntity WHERE id = ?;

existsVenta:
SELECT COUNT(*) > 0 AS es_mayor_cero FROM VentaEntity WHERE id = ?;

selectAllVentasByIsDeleted:
SELECT * FROM VentaEntity WHERE is_deleted = ?;

selectVentaLastInserted:
SELECT * FROM VentaEntity WHERE id = last_insert_rowid();

insertVenta:
INSERT INTO VentaEntity (id, cliente_id, total, fecha_compra, created_at, updated_at, is_deleted) VALUES (?, ?, ?,?, ?, ?, ?);

updateVenta:
UPDATE VentaEntity SET cliente_id = ?, total = ?, fecha_compra = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteVenta:
DELETE FROM VentaEntity WHERE id = ?;

selectVentasByDate:
SELECT * FROM VentaEntity WHERE fecha_compra = ?;



-- Tabla de Lineas de Ventas
CREATE TABLE IF NOT EXISTS LineaVentaEntity (
     id TEXT PRIMARY KEY,
     venta_id TEXT NOT NULL REFERENCES VentaEntity(id),
     producto_id TEXT NOT NULL REFERENCES ProductoEntity(id),
     producto_tipo TEXT NOT NULL,
     cantidad INTEGER NOT NULL,
     precio REAL NOT NULL,
     created_at TEXT NOT NULL,
     updated_at TEXT NOT NULL,
     is_deleted INTEGER NOT NULL DEFAULT 0
);

-- Operaciones CRUD para la tabla de Lineas de Ventas
removeAllLineasVentas:
DELETE FROM LineaVentaEntity;

selectAllLineasVentas:
SELECT * FROM LineaVentaEntity;

selectLineaVentaById:
SELECT * FROM LineaVentaEntity WHERE id = ?;

selectAllLineasVentaByVentaId:
SELECT * FROM LineaVentaEntity WHERE venta_id = ?;

selectAllLineasVentasByIsDeleted:
SELECT * FROM LineaVentaEntity WHERE is_deleted = ?;

selectLineaVentaLastInserted:
SELECT * FROM LineaVentaEntity WHERE id = last_insert_rowid();

insertLineaVenta:
INSERT INTO LineaVentaEntity (id, venta_id, producto_id, producto_tipo, cantidad, precio, created_at, updated_at, is_deleted) VALUES (?, ?, ?, ?, ?, ?,?, ?, ?);

updateLineaVenta:
UPDATE LineaVentaEntity SET venta_id = ?, producto_id = ?, producto_tipo = ?,  cantidad = ?, precio = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteLineaVenta:
DELETE FROM LineaVentaEntity WHERE id = ?;